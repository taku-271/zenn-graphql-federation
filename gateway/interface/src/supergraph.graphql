schema
  @core(feature: "https://specs.apollo.dev/core/v0.2")
  @core(feature: "https://specs.apollo.dev/join/v0.1", for: EXECUTION) {
  query: Query
}

directive @core(
  as: String
  feature: String!
  for: core__Purpose
) repeatable on SCHEMA

directive @join__field(
  graph: join__Graph
  provides: join__FieldSet
  requires: join__FieldSet
) on FIELD_DEFINITION

directive @join__graph(name: String!, url: String!) on ENUM_VALUE

directive @join__owner(graph: join__Graph!) on INTERFACE | OBJECT

directive @join__type(
  graph: join__Graph!
  key: join__FieldSet
) repeatable on INTERFACE | OBJECT

type Form
  @join__owner(graph: FORMS)
  @join__type(graph: FORMS, key: "id")
  @join__type(graph: PROJECTS, key: "id") {
  id: Int! @join__field(graph: FORMS)
  name: String! @join__field(graph: FORMS)
}

type Project {
  forms: [Form]
  id: Int!
  name: String!
}

type Query {
  form(id: Int!): Form! @join__field(graph: FORMS)
  forms: [Form]! @join__field(graph: FORMS)
  project(id: Int!): Project! @join__field(graph: PROJECTS)
  projects: [Project]! @join__field(graph: PROJECTS)
}

enum core__Purpose {
  """
  `EXECUTION` features provide metadata necessary to for operation execution.
  """
  EXECUTION

  """
  `SECURITY` features provide metadata necessary to securely resolve fields.
  """
  SECURITY
}

scalar join__FieldSet

enum join__Graph {
  FORMS @join__graph(name: "forms", url: "http://localhost:4002/graphql")
  PROJECTS @join__graph(name: "projects", url: "http://localhost:4001/graphql")
}
